#include "Equalizer.h"

#include <utility>

/*
static const float a[EQ_ORDER][3] = {{1,	-1.99025792346686,	0.990300552392570},
                                     //{{1,	-1.98908087331878,	0.989123477033503},
                                     {1,	-1.42507007255994,	0.486275282762967},
                                     //{1,	-1.47115612048922,	0.523052889206998},
                                     {1,	0,	-0.143047370423131}};
                                     //{1,	0,	-0.114745304979972}};
static const float b[EQ_ORDER][3] = {{1.00881865498602,	-1.99025792346686,	0.981481897406548},
                                     //{{1.00673648945636,	-1.98908087331878,	0.982386987577141},
                                     {0.871873776320474,	-1.42507007255994,	0.614401506442493},
                                     //{0.881046346125931,	-1.47115612048922,	0.642006543081066},
                                     {1.14798200554352,	0,	-0.291029375966656}};
                                     //{1.22993714549809,	0,	-0.344682450478062}};*/

/*static const float a[EQ_ORDER][3] = {{1,	-1.97420005863592,	0.974603139669812},
                                     {1,	-1.33545376585373,	0.416714390861813},
                                     {1,	-0.660256034368233,	0.320512068736467}};
static const float b[EQ_ORDER][3] = {{1.00880298433790,	-1.97383358079995,	0.966166633167884},
                                     {0.854524845860190,	-1.33545376585373,	0.562189545001623},
                                     {1.08796834620579,	-0.660256034368233,	0.232543722530678}};*/

/*
static const float a[EQ_ORDER][3] = {
    {1.000000000000000, -1.972748350017973, 0.973074592160021},
    {1.000000000000000, -1.256682922196583, 0.333150443802919},
    {1.000000000000000, -0.647226652765832, 0.294453305531665}
};

static const float b[EQ_ORDER][3] = {
    {1.009286845801323, -1.972451733446694, 0.964084362929977},
    {0.833683464059454, -1.256682922196583, 0.499466979743465},
    {1.043044858548443, -0.647226652765832, 0.251408446983222}
};*/

/*
static const float a[EQ_ORDER][3] = {
    {1.000000000000000, -1.972748350017973, 0.973074592160021},
    {1.000000000000000, -1.232336077107481, 0.307322124851148},
    //{1.000000000000000, -0.647226652765832, 0.294453305531665}
};

static const float b[EQ_ORDER][3] = {
    {1.009286845801323, -1.972451733446694, 0.964084362929977},
    {0.808364983163067, -1.232336077107481, 0.498957141688081},
    //{1.043044858548443, -0.647226652765832, 0.251408446983222}
};*/

static const float a[EQ_ORDER][3] = {
    {1.000000000000000, -1.955030104871120, 0.955653879248517},
    {1.000000000000000, -1.232336077107481, 0.307322124851148},
    //{1.000000000000000, -0.647226652765832, 0.294453305531665}
};

static const float b[EQ_ORDER][3] = {
    {1.015334727647332, -1.954462974530710, 0.940886281941595},
    {0.808364983163067, -1.232336077107481, 0.498957141688081},
    //{1.043044858548443, -0.647226652765832, 0.251408446983222}
};

float eq_buffer[EQ_ORDER][2] = {0};

void reset_eq() {
    #pragma unroll
    for(int i = 0; i < EQ_ORDER; i++) {
        eq_buffer[i][0] = 0;
        eq_buffer[i][1] = 0;
    }
}

void equalize(int16_t * data, int length) {
    float y[EQ_ORDER+1] = {0};
    for (int n = 0; n < length; n+=2) {
        y[0] = data[n];

        #pragma unroll
        for (int k = 0; k < EQ_ORDER; k++) {
            y[k+1] = b[k][0] * y[k] + eq_buffer[k][0];
            eq_buffer[k][0] = b[k][1] * y[k] - a[k][1] * y[k+1] + eq_buffer[k][1];
            eq_buffer[k][1] = b[k][2] * y[k] - a[k][2] * y[k+1];
        }

        data[n] = (int16_t) CLAMP(0.85 * y[EQ_ORDER],-1*(1<<15),1*(1<<15)-1);
    }
}